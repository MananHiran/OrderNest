
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  user_id: 'user_id',
  name: 'name',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  phone: 'phone',
  profile_picture: 'profile_picture',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProductScalarFieldEnum = {
  product_id: 'product_id',
  product_name: 'product_name',
  type: 'type',
  unit_of_measure: 'unit_of_measure',
  current_stock: 'current_stock',
  cost_per_unit: 'cost_per_unit',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.BOMScalarFieldEnum = {
  bom_id: 'bom_id',
  product_id: 'product_id',
  component_id: 'component_id',
  quantity_required: 'quantity_required',
  operation_sequence: 'operation_sequence',
  created_at: 'created_at'
};

exports.Prisma.ManufacturingOrderScalarFieldEnum = {
  mo_id: 'mo_id',
  product_id: 'product_id',
  quantity: 'quantity',
  state: 'state',
  status: 'status',
  scheduled_start: 'scheduled_start',
  scheduled_end: 'scheduled_end',
  actual_start: 'actual_start',
  actual_end: 'actual_end',
  created_by: 'created_by',
  assigned_to: 'assigned_to',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.WorkOrderScalarFieldEnum = {
  wo_id: 'wo_id',
  mo_id: 'mo_id',
  operation_name: 'operation_name',
  work_center_id: 'work_center_id',
  assigned_to: 'assigned_to',
  status: 'status',
  comments: 'comments',
  planned_time: 'planned_time',
  actual_time: 'actual_time',
  started_at: 'started_at',
  completed_at: 'completed_at'
};

exports.Prisma.WorkCenterScalarFieldEnum = {
  work_center_id: 'work_center_id',
  name: 'name',
  cost_per_hour: 'cost_per_hour',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.StockLedgerScalarFieldEnum = {
  ledger_id: 'ledger_id',
  product_id: 'product_id',
  movement_type: 'movement_type',
  quantity: 'quantity',
  reference_type: 'reference_type',
  reference_id: 'reference_id',
  created_at: 'created_at',
  created_by: 'created_by'
};

exports.Prisma.ReportScalarFieldEnum = {
  report_id: 'report_id',
  user_id: 'user_id',
  report_type: 'report_type',
  data: 'data',
  generated_at: 'generated_at'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  log_id: 'log_id',
  user_id: 'user_id',
  action: 'action',
  timestamp: 'timestamp',
  details: 'details'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  INVENTORY_MANAGER: 'INVENTORY_MANAGER',
  OPERATOR_MANAGER: 'OPERATOR_MANAGER',
  MANUFACTURER_MANAGER: 'MANUFACTURER_MANAGER',
  ADMIN: 'ADMIN'
};

exports.ProductType = exports.$Enums.ProductType = {
  RAW_MATERIAL: 'RAW_MATERIAL',
  FINISHED_GOOD: 'FINISHED_GOOD',
  SEMI_FINISHED: 'SEMI_FINISHED'
};

exports.ManufacturingOrderStatus = exports.$Enums.ManufacturingOrderStatus = {
  DRAFT: 'DRAFT',
  CONFIRMED: 'CONFIRMED',
  IN_PROGRESS: 'IN_PROGRESS',
  TO_CLOSE: 'TO_CLOSE',
  DONE: 'DONE'
};

exports.WorkOrderStatus = exports.$Enums.WorkOrderStatus = {
  NOT_STARTED: 'NOT_STARTED',
  STARTED: 'STARTED',
  PAUSED: 'PAUSED',
  COMPLETED: 'COMPLETED'
};

exports.MovementType = exports.$Enums.MovementType = {
  IN: 'IN',
  OUT: 'OUT'
};

exports.ReferenceType = exports.$Enums.ReferenceType = {
  MO: 'MO',
  WO: 'WO',
  MANUAL_ADJUSTMENT: 'MANUAL_ADJUSTMENT'
};

exports.ReportType = exports.$Enums.ReportType = {
  USER_ACTIVITY: 'USER_ACTIVITY',
  PRODUCTION_SUMMARY: 'PRODUCTION_SUMMARY',
  INVENTORY_SUMMARY: 'INVENTORY_SUMMARY'
};

exports.UnitType = exports.$Enums.UnitType = {
  PCS: 'PCS',
  KG: 'KG',
  LTR: 'LTR',
  MT: 'MT'
};

exports.ComponentState = exports.$Enums.ComponentState = {
  Avaliable: 'Avaliable',
  Not_Avaliable: 'Not_Avaliable'
};

exports.Prisma.ModelName = {
  User: 'User',
  Product: 'Product',
  BOM: 'BOM',
  ManufacturingOrder: 'ManufacturingOrder',
  WorkOrder: 'WorkOrder',
  WorkCenter: 'WorkCenter',
  StockLedger: 'StockLedger',
  Report: 'Report',
  AuditLog: 'AuditLog'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "E:\\Manan\\hackathon\\Finale\\hackathon-app\\lib\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "E:\\Manan\\hackathon\\Finale\\hackathon-app\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": null,
        "value": "file:./dev.db"
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = \"file:./dev.db\"\n}\n\n// Enums\nenum UserRole {\n  USER\n  INVENTORY_MANAGER\n  OPERATOR_MANAGER\n  MANUFACTURER_MANAGER\n  ADMIN\n}\n\nenum ProductType {\n  RAW_MATERIAL\n  FINISHED_GOOD\n  SEMI_FINISHED\n}\n\nenum ManufacturingOrderStatus {\n  DRAFT\n  CONFIRMED\n  IN_PROGRESS\n  TO_CLOSE\n  DONE\n}\n\nenum WorkOrderStatus {\n  NOT_STARTED\n  STARTED\n  PAUSED\n  COMPLETED\n}\n\nenum MovementType {\n  IN\n  OUT\n}\n\nenum ReferenceType {\n  MO\n  WO\n  MANUAL_ADJUSTMENT\n}\n\nenum ReportType {\n  USER_ACTIVITY\n  PRODUCTION_SUMMARY\n  INVENTORY_SUMMARY\n}\n\nenum UnitType {\n  PCS\n  KG\n  LTR\n  MT\n}\n\nenum ComponentState {\n  Avaliable\n  Not_Avaliable\n}\n\n// 1. Users Table\nmodel User {\n  user_id         String   @id @default(cuid())\n  name            String\n  email           String   @unique\n  password_hash   String\n  role            UserRole @default(USER)\n  phone           String?\n  profile_picture String?\n  created_at      DateTime @default(now())\n  updated_at      DateTime @updatedAt\n\n  // Relations\n  created_mos   ManufacturingOrder[] @relation(\"CreatedByUser\")\n  assigned_mos  ManufacturingOrder[] @relation(\"AssignedToUser\")\n  assigned_wos  WorkOrder[]          @relation(\"AssignedToUser\")\n  stock_ledgers StockLedger[]\n  reports       Report[]\n  audit_logs    AuditLog[]\n\n  @@map(\"users\")\n}\n\n// 2. Products Table\nmodel Product {\n  product_id      String      @id @default(cuid())\n  product_name    String\n  type            ProductType\n  unit_of_measure UnitType\n  current_stock   Float       @default(0)\n  cost_per_unit   Float\n  created_at      DateTime    @default(now())\n  updated_at      DateTime    @updatedAt\n\n  // Relations\n  boms_as_product      BOM[]                @relation(\"ProductBOM\")\n  boms_as_component    BOM[]                @relation(\"ComponentBOM\")\n  manufacturing_orders ManufacturingOrder[]\n  stock_ledgers        StockLedger[]\n\n  @@map(\"products\")\n}\n\n// 3. BOM (Bill of Materials) Table\nmodel BOM {\n  bom_id             String   @id @default(cuid())\n  product_id         String\n  component_id       String\n  quantity_required  Float\n  operation_sequence String // JSON string for step order (e.g., \"[1,2,3]\")\n  created_at         DateTime @default(now())\n\n  // Relations\n  product   Product @relation(\"ProductBOM\", fields: [product_id], references: [product_id], onDelete: Cascade)\n  component Product @relation(\"ComponentBOM\", fields: [component_id], references: [product_id], onDelete: Cascade)\n\n  @@map(\"bom\")\n}\n\n// 4. Manufacturing Orders (MO) Table\nmodel ManufacturingOrder {\n  mo_id           String                   @id @default(\"mo_\")\n  product_id      String\n  quantity        Float\n  state           ComponentState           @default(Not_Avaliable)\n  status          ManufacturingOrderStatus @default(DRAFT)\n  scheduled_start DateTime?\n  scheduled_end   DateTime?\n  actual_start    DateTime?\n  actual_end      DateTime?\n  created_by      String\n  assigned_to     String?\n  created_at      DateTime                 @default(now())\n  updated_at      DateTime                 @updatedAt\n\n  // Relations\n  product       Product       @relation(fields: [product_id], references: [product_id], onDelete: Cascade)\n  creator       User          @relation(\"CreatedByUser\", fields: [created_by], references: [user_id])\n  assignee      User?         @relation(\"AssignedToUser\", fields: [assigned_to], references: [user_id])\n  work_orders   WorkOrder[]\n  stock_ledgers StockLedger[]\n\n  @@map(\"manufacturing_orders\")\n}\n\n// 5. Work Orders (WO) Table\nmodel WorkOrder {\n  wo_id          String          @id @default(\"wo_\")\n  mo_id          String\n  operation_name String\n  work_center_id String\n  assigned_to    String?\n  status         WorkOrderStatus @default(NOT_STARTED)\n  comments       String?\n  planned_time   Int? // in minutes\n  actual_time    Int? // in minutes\n  started_at     DateTime?\n  completed_at   DateTime?\n\n  // Relations\n  manufacturing_order ManufacturingOrder @relation(fields: [mo_id], references: [mo_id], onDelete: Cascade)\n  work_center         WorkCenter         @relation(fields: [work_center_id], references: [work_center_id])\n  assignee            User?              @relation(\"AssignedToUser\", fields: [assigned_to], references: [user_id])\n  stock_ledgers       StockLedger[]\n\n  @@map(\"work_orders\")\n}\n\n// 6. Work Centers Table\nmodel WorkCenter {\n  work_center_id String   @id @default(cuid())\n  name           String\n  cost_per_hour  Float\n  created_at     DateTime @default(now())\n  updated_at     DateTime @updatedAt\n\n  // Relations\n  work_orders WorkOrder[]\n\n  @@map(\"work_centers\")\n}\n\n// 7. Stock Ledger Table\nmodel StockLedger {\n  ledger_id      String        @id @default(cuid())\n  product_id     String\n  movement_type  MovementType\n  quantity       Float\n  reference_type ReferenceType\n  reference_id   String\n  created_at     DateTime      @default(now())\n  created_by     String\n\n  // Relations\n  product             Product             @relation(fields: [product_id], references: [product_id], onDelete: Cascade)\n  creator             User                @relation(fields: [created_by], references: [user_id])\n  manufacturing_order ManufacturingOrder? @relation(fields: [reference_id], references: [mo_id])\n  work_order          WorkOrder?          @relation(fields: [reference_id], references: [wo_id])\n\n  @@map(\"stock_ledger\")\n}\n\n// 8. Reports Table\nmodel Report {\n  report_id    String     @id @default(cuid())\n  user_id      String\n  report_type  ReportType\n  data         Json // JSON field for flexibility\n  generated_at DateTime   @default(now())\n\n  // Relations\n  user User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)\n\n  @@map(\"reports\")\n}\n\n// 9. Audit Logs Table\nmodel AuditLog {\n  log_id    String   @id @default(cuid())\n  user_id   String\n  action    String\n  timestamp DateTime @default(now())\n  details   Json? // JSON field for additional details\n\n  // Relations\n  user User @relation(fields: [user_id], references: [user_id], onDelete: Cascade)\n\n  @@map(\"audit_logs\")\n}\n",
  "inlineSchemaHash": "bd375ab67d27e7ce57fa3e904530a39007c19908b63aa3ae491d9bcc66e8c12e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_picture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_mos\",\"kind\":\"object\",\"type\":\"ManufacturingOrder\",\"relationName\":\"CreatedByUser\"},{\"name\":\"assigned_mos\",\"kind\":\"object\",\"type\":\"ManufacturingOrder\",\"relationName\":\"AssignedToUser\"},{\"name\":\"assigned_wos\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"AssignedToUser\"},{\"name\":\"stock_ledgers\",\"kind\":\"object\",\"type\":\"StockLedger\",\"relationName\":\"StockLedgerToUser\"},{\"name\":\"reports\",\"kind\":\"object\",\"type\":\"Report\",\"relationName\":\"ReportToUser\"},{\"name\":\"audit_logs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"users\"},\"Product\":{\"fields\":[{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"ProductType\"},{\"name\":\"unit_of_measure\",\"kind\":\"enum\",\"type\":\"UnitType\"},{\"name\":\"current_stock\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"cost_per_unit\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"boms_as_product\",\"kind\":\"object\",\"type\":\"BOM\",\"relationName\":\"ProductBOM\"},{\"name\":\"boms_as_component\",\"kind\":\"object\",\"type\":\"BOM\",\"relationName\":\"ComponentBOM\"},{\"name\":\"manufacturing_orders\",\"kind\":\"object\",\"type\":\"ManufacturingOrder\",\"relationName\":\"ManufacturingOrderToProduct\"},{\"name\":\"stock_ledgers\",\"kind\":\"object\",\"type\":\"StockLedger\",\"relationName\":\"ProductToStockLedger\"}],\"dbName\":\"products\"},\"BOM\":{\"fields\":[{\"name\":\"bom_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"component_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity_required\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"operation_sequence\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductBOM\"},{\"name\":\"component\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ComponentBOM\"}],\"dbName\":\"bom\"},\"ManufacturingOrder\":{\"fields\":[{\"name\":\"mo_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"state\",\"kind\":\"enum\",\"type\":\"ComponentState\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ManufacturingOrderStatus\"},{\"name\":\"scheduled_start\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scheduled_end\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actual_start\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actual_end\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assigned_to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ManufacturingOrderToProduct\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreatedByUser\"},{\"name\":\"assignee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedToUser\"},{\"name\":\"work_orders\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"ManufacturingOrderToWorkOrder\"},{\"name\":\"stock_ledgers\",\"kind\":\"object\",\"type\":\"StockLedger\",\"relationName\":\"ManufacturingOrderToStockLedger\"}],\"dbName\":\"manufacturing_orders\"},\"WorkOrder\":{\"fields\":[{\"name\":\"wo_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mo_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operation_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"work_center_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assigned_to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"WorkOrderStatus\"},{\"name\":\"comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"planned_time\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"actual_time\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"started_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"manufacturing_order\",\"kind\":\"object\",\"type\":\"ManufacturingOrder\",\"relationName\":\"ManufacturingOrderToWorkOrder\"},{\"name\":\"work_center\",\"kind\":\"object\",\"type\":\"WorkCenter\",\"relationName\":\"WorkCenterToWorkOrder\"},{\"name\":\"assignee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedToUser\"},{\"name\":\"stock_ledgers\",\"kind\":\"object\",\"type\":\"StockLedger\",\"relationName\":\"StockLedgerToWorkOrder\"}],\"dbName\":\"work_orders\"},\"WorkCenter\":{\"fields\":[{\"name\":\"work_center_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cost_per_hour\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"work_orders\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"WorkCenterToWorkOrder\"}],\"dbName\":\"work_centers\"},\"StockLedger\":{\"fields\":[{\"name\":\"ledger_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"movement_type\",\"kind\":\"enum\",\"type\":\"MovementType\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"reference_type\",\"kind\":\"enum\",\"type\":\"ReferenceType\"},{\"name\":\"reference_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToStockLedger\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StockLedgerToUser\"},{\"name\":\"manufacturing_order\",\"kind\":\"object\",\"type\":\"ManufacturingOrder\",\"relationName\":\"ManufacturingOrderToStockLedger\"},{\"name\":\"work_order\",\"kind\":\"object\",\"type\":\"WorkOrder\",\"relationName\":\"StockLedgerToWorkOrder\"}],\"dbName\":\"stock_ledger\"},\"Report\":{\"fields\":[{\"name\":\"report_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"report_type\",\"kind\":\"enum\",\"type\":\"ReportType\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"generated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReportToUser\"}],\"dbName\":\"reports\"},\"AuditLog\":{\"fields\":[{\"name\":\"log_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"audit_logs\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {}
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

